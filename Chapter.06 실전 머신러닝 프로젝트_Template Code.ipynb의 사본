{"cells":[{"cell_type":"markdown","id":"8f3119aa","metadata":{"id":"8f3119aa"},"source":["## Machine Learning 프로젝트 수행을 위한 코드 구조화\n","\n","`(분류, 회귀 Task)`"]},{"cell_type":"markdown","id":"9f7610ea","metadata":{"id":"9f7610ea"},"source":["- ML project를 위해서 사용하는 템플릿 코드를 만듭니다.\n","\n","1. **필요한 라이브러리와 데이터를 불러옵니다.**\n","\n","\n","2. **EDA를 수행합니다.** 이 때 EDA의 목적은 풀어야하는 문제를 위해서 수행됩니다.\n","\n","\n","3. **전처리를 수행합니다.** 이 때 중요한건 **feature engineering**을 어떻게 하느냐 입니다.\n","\n","\n","4. **데이터 분할을 합니다.** 이 때 train data와 test data 간의 분포 차이가 없는지 확인합니다.\n","\n","\n","5. **학습을 진행합니다.** 어떤 모델을 사용하여 학습할지 정합니다. 성능이 잘 나오는 GBM을 추천합니다.\n","\n","\n","6. **hyper-parameter tuning을 수행합니다.** 원하는 목표 성능이 나올 때 까지 진행합니다. 검증 단계를 통해 지속적으로 **overfitting이 되지 않게 주의**하세요.\n","\n","\n","7. **최종 테스트를 진행합니다.** 데이터 분석 대회 포맷에 맞는 submission 파일을 만들어서 성능을 확인해보세요."]},{"cell_type":"markdown","id":"bd2f7530","metadata":{"id":"bd2f7530"},"source":["## 1. 라이브러리, 데이터 불러오기"]},{"cell_type":"code","source":["!pip install optuna"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_jPwapy4cCXT","executionInfo":{"status":"ok","timestamp":1679072416608,"user_tz":-540,"elapsed":4154,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"3df49f40-e08f-4510-cc30-7f1588528bc8"},"id":"_jPwapy4cCXT","execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: optuna in /usr/local/lib/python3.9/dist-packages (3.1.0)\n","Requirement already satisfied: sqlalchemy>=1.3.0 in /usr/local/lib/python3.9/dist-packages (from optuna) (1.4.46)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.9/dist-packages (from optuna) (4.65.0)\n","Requirement already satisfied: colorlog in /usr/local/lib/python3.9/dist-packages (from optuna) (6.7.0)\n","Requirement already satisfied: PyYAML in /usr/local/lib/python3.9/dist-packages (from optuna) (6.0)\n","Requirement already satisfied: cmaes>=0.9.1 in /usr/local/lib/python3.9/dist-packages (from optuna) (0.9.1)\n","Requirement already satisfied: alembic>=1.5.0 in /usr/local/lib/python3.9/dist-packages (from optuna) (1.10.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.9/dist-packages (from optuna) (23.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.9/dist-packages (from optuna) (1.22.4)\n","Requirement already satisfied: typing-extensions>=4 in /usr/local/lib/python3.9/dist-packages (from alembic>=1.5.0->optuna) (4.5.0)\n","Requirement already satisfied: Mako in /usr/local/lib/python3.9/dist-packages (from alembic>=1.5.0->optuna) (1.2.4)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.9/dist-packages (from sqlalchemy>=1.3.0->optuna) (2.0.2)\n","Requirement already satisfied: MarkupSafe>=0.9.2 in /usr/local/lib/python3.9/dist-packages (from Mako->alembic>=1.5.0->optuna) (2.1.2)\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9EdKE9X4g2KJ","executionInfo":{"status":"ok","timestamp":1679072412457,"user_tz":-540,"elapsed":22266,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"b3456615-12be-4719-c106-e8868488bd82"},"id":"9EdKE9X4g2KJ","execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":7,"id":"125fc348","metadata":{"id":"125fc348","executionInfo":{"status":"ok","timestamp":1679072416609,"user_tz":-540,"elapsed":13,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# 데이터분석 4종 세트\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# 모델들, 성능 평가\n","# (저는 일반적으로 정형데이터로 머신러닝 분석할 때는 이 2개 모델은 그냥 돌려봅니다. 특히 RF가 테스트하기 좋습니다.)\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.ensemble import RandomForestRegressor\n","from lightgbm.sklearn import LGBMClassifier\n","from lightgbm.sklearn import LGBMRegressor\n","\n","# 상관관계 분석, VIF : 다중공선성 제거\n","from statsmodels.stats.outliers_influence import variance_inflation_factor\n","\n","# KFold(CV), partial : optuna를 사용하기 위함\n","from sklearn.model_selection import KFold\n","from functools import partial\n","\n","# hyper-parameter tuning을 위한 라이브러리, optuna\n","import optuna"]},{"cell_type":"code","execution_count":8,"id":"0e4d49ce","metadata":{"id":"0e4d49ce","executionInfo":{"status":"ok","timestamp":1679072416609,"user_tz":-540,"elapsed":12,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# flag setting\n","data_reducing = False ## memory reducing technique\n","feature_reducing = False ## feature extraction (curse of dimensionality)"]},{"cell_type":"code","execution_count":9,"id":"3615c24a","metadata":{"id":"3615c24a","executionInfo":{"status":"ok","timestamp":1679072418671,"user_tz":-540,"elapsed":2073,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# 데이터를 불러옵니다.\n","base_path = '/content/drive/MyDrive/Colab Notebooks/data/mercedes-benz-greener-manufacturing/'\n","train = pd.read_csv(base_path + \"train.csv\")\n","test = pd.read_csv(base_path + \"test.csv\")"]},{"cell_type":"markdown","id":"c9c9acb8","metadata":{"id":"c9c9acb8"},"source":["## 2. EDA"]},{"cell_type":"markdown","id":"6fdf620b","metadata":{"id":"6fdf620b"},"source":["- 데이터에서 찾아야 하는 기초적인 내용들을 확인합니다.\n","\n","\n","- class imbalance, target distribution, outlier, correlation을 확인합니다."]},{"cell_type":"code","execution_count":10,"id":"adb06474","metadata":{"id":"adb06474","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1679072418671,"user_tz":-540,"elapsed":19,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"3ad43381-8ac9-4b8b-ff32-e0cc2ee967e6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        ID       y  X0 X1  X2 X3 X4  X5 X6 X8  ...  X375  X376  X377  X378  \\\n","0        0  130.81   k  v  at  a  d   u  j  o  ...     0     0     1     0   \n","1        6   88.53   k  t  av  e  d   y  l  o  ...     1     0     0     0   \n","2        7   76.26  az  w   n  c  d   x  j  x  ...     0     0     0     0   \n","3        9   80.62  az  t   n  f  d   x  l  e  ...     0     0     0     0   \n","4       13   78.02  az  v   n  f  d   h  d  n  ...     0     0     0     0   \n","...    ...     ...  .. ..  .. .. ..  .. .. ..  ...   ...   ...   ...   ...   \n","4204  8405  107.39  ak  s  as  c  d  aa  d  q  ...     1     0     0     0   \n","4205  8406  108.77   j  o   t  d  d  aa  h  h  ...     0     1     0     0   \n","4206  8412  109.22  ak  v   r  a  d  aa  g  e  ...     0     0     1     0   \n","4207  8415   87.48  al  r   e  f  d  aa  l  u  ...     0     0     0     0   \n","4208  8417  110.85   z  r  ae  c  d  aa  g  w  ...     1     0     0     0   \n","\n","      X379  X380  X382  X383  X384  X385  \n","0        0     0     0     0     0     0  \n","1        0     0     0     0     0     0  \n","2        0     0     1     0     0     0  \n","3        0     0     0     0     0     0  \n","4        0     0     0     0     0     0  \n","...    ...   ...   ...   ...   ...   ...  \n","4204     0     0     0     0     0     0  \n","4205     0     0     0     0     0     0  \n","4206     0     0     0     0     0     0  \n","4207     0     0     0     0     0     0  \n","4208     0     0     0     0     0     0  \n","\n","[4209 rows x 378 columns]"],"text/html":["\n","  <div id=\"df-2d984aed-35e0-492c-980a-cddf31068470\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>y</th>\n","      <th>X0</th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>X3</th>\n","      <th>X4</th>\n","      <th>X5</th>\n","      <th>X6</th>\n","      <th>X8</th>\n","      <th>...</th>\n","      <th>X375</th>\n","      <th>X376</th>\n","      <th>X377</th>\n","      <th>X378</th>\n","      <th>X379</th>\n","      <th>X380</th>\n","      <th>X382</th>\n","      <th>X383</th>\n","      <th>X384</th>\n","      <th>X385</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>130.81</td>\n","      <td>k</td>\n","      <td>v</td>\n","      <td>at</td>\n","      <td>a</td>\n","      <td>d</td>\n","      <td>u</td>\n","      <td>j</td>\n","      <td>o</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>88.53</td>\n","      <td>k</td>\n","      <td>t</td>\n","      <td>av</td>\n","      <td>e</td>\n","      <td>d</td>\n","      <td>y</td>\n","      <td>l</td>\n","      <td>o</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7</td>\n","      <td>76.26</td>\n","      <td>az</td>\n","      <td>w</td>\n","      <td>n</td>\n","      <td>c</td>\n","      <td>d</td>\n","      <td>x</td>\n","      <td>j</td>\n","      <td>x</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9</td>\n","      <td>80.62</td>\n","      <td>az</td>\n","      <td>t</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>d</td>\n","      <td>x</td>\n","      <td>l</td>\n","      <td>e</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13</td>\n","      <td>78.02</td>\n","      <td>az</td>\n","      <td>v</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>d</td>\n","      <td>h</td>\n","      <td>d</td>\n","      <td>n</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4204</th>\n","      <td>8405</td>\n","      <td>107.39</td>\n","      <td>ak</td>\n","      <td>s</td>\n","      <td>as</td>\n","      <td>c</td>\n","      <td>d</td>\n","      <td>aa</td>\n","      <td>d</td>\n","      <td>q</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4205</th>\n","      <td>8406</td>\n","      <td>108.77</td>\n","      <td>j</td>\n","      <td>o</td>\n","      <td>t</td>\n","      <td>d</td>\n","      <td>d</td>\n","      <td>aa</td>\n","      <td>h</td>\n","      <td>h</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4206</th>\n","      <td>8412</td>\n","      <td>109.22</td>\n","      <td>ak</td>\n","      <td>v</td>\n","      <td>r</td>\n","      <td>a</td>\n","      <td>d</td>\n","      <td>aa</td>\n","      <td>g</td>\n","      <td>e</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4207</th>\n","      <td>8415</td>\n","      <td>87.48</td>\n","      <td>al</td>\n","      <td>r</td>\n","      <td>e</td>\n","      <td>f</td>\n","      <td>d</td>\n","      <td>aa</td>\n","      <td>l</td>\n","      <td>u</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4208</th>\n","      <td>8417</td>\n","      <td>110.85</td>\n","      <td>z</td>\n","      <td>r</td>\n","      <td>ae</td>\n","      <td>c</td>\n","      <td>d</td>\n","      <td>aa</td>\n","      <td>g</td>\n","      <td>w</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4209 rows × 378 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d984aed-35e0-492c-980a-cddf31068470')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2d984aed-35e0-492c-980a-cddf31068470 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2d984aed-35e0-492c-980a-cddf31068470');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}],"source":["train"]},{"cell_type":"code","source":["train[train.isnull().any(axis=1)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":78},"id":"S0pyrtcxhuBJ","executionInfo":{"status":"ok","timestamp":1679072418671,"user_tz":-540,"elapsed":17,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"7d5ca939-0760-46a7-f111-96ce0533a007"},"id":"S0pyrtcxhuBJ","execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [ID, y, X0, X1, X2, X3, X4, X5, X6, X8, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, X23, X24, X26, X27, X28, X29, X30, X31, X32, X33, X34, X35, X36, X37, X38, X39, X40, X41, X42, X43, X44, X45, X46, X47, X48, X49, X50, X51, X52, X53, X54, X55, X56, X57, X58, X59, X60, X61, X62, X63, X64, X65, X66, X67, X68, X69, X70, X71, X73, X74, X75, X76, X77, X78, X79, X80, X81, X82, X83, X84, X85, X86, X87, X88, X89, X90, X91, X92, X93, X94, X95, X96, X97, X98, X99, X100, X101, ...]\n","Index: []\n","\n","[0 rows x 378 columns]"],"text/html":["\n","  <div id=\"df-6125b465-b7a7-4ca8-a66e-a70513571ff7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>y</th>\n","      <th>X0</th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>X3</th>\n","      <th>X4</th>\n","      <th>X5</th>\n","      <th>X6</th>\n","      <th>X8</th>\n","      <th>...</th>\n","      <th>X375</th>\n","      <th>X376</th>\n","      <th>X377</th>\n","      <th>X378</th>\n","      <th>X379</th>\n","      <th>X380</th>\n","      <th>X382</th>\n","      <th>X383</th>\n","      <th>X384</th>\n","      <th>X385</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","<p>0 rows × 378 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6125b465-b7a7-4ca8-a66e-a70513571ff7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6125b465-b7a7-4ca8-a66e-a70513571ff7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6125b465-b7a7-4ca8-a66e-a70513571ff7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["test[test.isnull().any(axis=1)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":78},"id":"eEJHCSsF1rpt","executionInfo":{"status":"ok","timestamp":1679072418672,"user_tz":-540,"elapsed":17,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"cbe2f844-7da1-49a2-b436-e8b661e88418"},"id":"eEJHCSsF1rpt","execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [ID, X0, X1, X2, X3, X4, X5, X6, X8, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, X23, X24, X26, X27, X28, X29, X30, X31, X32, X33, X34, X35, X36, X37, X38, X39, X40, X41, X42, X43, X44, X45, X46, X47, X48, X49, X50, X51, X52, X53, X54, X55, X56, X57, X58, X59, X60, X61, X62, X63, X64, X65, X66, X67, X68, X69, X70, X71, X73, X74, X75, X76, X77, X78, X79, X80, X81, X82, X83, X84, X85, X86, X87, X88, X89, X90, X91, X92, X93, X94, X95, X96, X97, X98, X99, X100, X101, X102, ...]\n","Index: []\n","\n","[0 rows x 377 columns]"],"text/html":["\n","  <div id=\"df-783a7051-08e2-4703-9349-9eb659fe8162\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>X0</th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>X3</th>\n","      <th>X4</th>\n","      <th>X5</th>\n","      <th>X6</th>\n","      <th>X8</th>\n","      <th>X10</th>\n","      <th>...</th>\n","      <th>X375</th>\n","      <th>X376</th>\n","      <th>X377</th>\n","      <th>X378</th>\n","      <th>X379</th>\n","      <th>X380</th>\n","      <th>X382</th>\n","      <th>X383</th>\n","      <th>X384</th>\n","      <th>X385</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","<p>0 rows × 377 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-783a7051-08e2-4703-9349-9eb659fe8162')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-783a7051-08e2-4703-9349-9eb659fe8162 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-783a7051-08e2-4703-9349-9eb659fe8162');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["train.select_dtypes(include='object') #object값 처리 필요"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"zAQyNAHCdHyl","executionInfo":{"status":"ok","timestamp":1679072418672,"user_tz":-540,"elapsed":16,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"76ff1925-7ddb-402d-a3aa-b94a55303be6"},"id":"zAQyNAHCdHyl","execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      X0 X1  X2 X3 X4  X5 X6 X8\n","0      k  v  at  a  d   u  j  o\n","1      k  t  av  e  d   y  l  o\n","2     az  w   n  c  d   x  j  x\n","3     az  t   n  f  d   x  l  e\n","4     az  v   n  f  d   h  d  n\n","...   .. ..  .. .. ..  .. .. ..\n","4204  ak  s  as  c  d  aa  d  q\n","4205   j  o   t  d  d  aa  h  h\n","4206  ak  v   r  a  d  aa  g  e\n","4207  al  r   e  f  d  aa  l  u\n","4208   z  r  ae  c  d  aa  g  w\n","\n","[4209 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-733b2337-7fa2-43d9-8de2-272c3db00a4a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X0</th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>X3</th>\n","      <th>X4</th>\n","      <th>X5</th>\n","      <th>X6</th>\n","      <th>X8</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>k</td>\n","      <td>v</td>\n","      <td>at</td>\n","      <td>a</td>\n","      <td>d</td>\n","      <td>u</td>\n","      <td>j</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>k</td>\n","      <td>t</td>\n","      <td>av</td>\n","      <td>e</td>\n","      <td>d</td>\n","      <td>y</td>\n","      <td>l</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>az</td>\n","      <td>w</td>\n","      <td>n</td>\n","      <td>c</td>\n","      <td>d</td>\n","      <td>x</td>\n","      <td>j</td>\n","      <td>x</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>az</td>\n","      <td>t</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>d</td>\n","      <td>x</td>\n","      <td>l</td>\n","      <td>e</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>az</td>\n","      <td>v</td>\n","      <td>n</td>\n","      <td>f</td>\n","      <td>d</td>\n","      <td>h</td>\n","      <td>d</td>\n","      <td>n</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4204</th>\n","      <td>ak</td>\n","      <td>s</td>\n","      <td>as</td>\n","      <td>c</td>\n","      <td>d</td>\n","      <td>aa</td>\n","      <td>d</td>\n","      <td>q</td>\n","    </tr>\n","    <tr>\n","      <th>4205</th>\n","      <td>j</td>\n","      <td>o</td>\n","      <td>t</td>\n","      <td>d</td>\n","      <td>d</td>\n","      <td>aa</td>\n","      <td>h</td>\n","      <td>h</td>\n","    </tr>\n","    <tr>\n","      <th>4206</th>\n","      <td>ak</td>\n","      <td>v</td>\n","      <td>r</td>\n","      <td>a</td>\n","      <td>d</td>\n","      <td>aa</td>\n","      <td>g</td>\n","      <td>e</td>\n","    </tr>\n","    <tr>\n","      <th>4207</th>\n","      <td>al</td>\n","      <td>r</td>\n","      <td>e</td>\n","      <td>f</td>\n","      <td>d</td>\n","      <td>aa</td>\n","      <td>l</td>\n","      <td>u</td>\n","    </tr>\n","    <tr>\n","      <th>4208</th>\n","      <td>z</td>\n","      <td>r</td>\n","      <td>ae</td>\n","      <td>c</td>\n","      <td>d</td>\n","      <td>aa</td>\n","      <td>g</td>\n","      <td>w</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4209 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-733b2337-7fa2-43d9-8de2-272c3db00a4a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-733b2337-7fa2-43d9-8de2-272c3db00a4a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-733b2337-7fa2-43d9-8de2-272c3db00a4a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["train[(train == 0).all(axis=1)] #한행이 모두 0인경우"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":78},"id":"lHC5FIBJfrTd","executionInfo":{"status":"ok","timestamp":1679072418672,"user_tz":-540,"elapsed":15,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"6dcb6d48-87fd-4492-dc83-fc7e53b8fc6a"},"id":"lHC5FIBJfrTd","execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [ID, y, X0, X1, X2, X3, X4, X5, X6, X8, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, X23, X24, X26, X27, X28, X29, X30, X31, X32, X33, X34, X35, X36, X37, X38, X39, X40, X41, X42, X43, X44, X45, X46, X47, X48, X49, X50, X51, X52, X53, X54, X55, X56, X57, X58, X59, X60, X61, X62, X63, X64, X65, X66, X67, X68, X69, X70, X71, X73, X74, X75, X76, X77, X78, X79, X80, X81, X82, X83, X84, X85, X86, X87, X88, X89, X90, X91, X92, X93, X94, X95, X96, X97, X98, X99, X100, X101, ...]\n","Index: []\n","\n","[0 rows x 378 columns]"],"text/html":["\n","  <div id=\"df-8a4a49e6-3c70-40e9-9e5e-882479457320\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>y</th>\n","      <th>X0</th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>X3</th>\n","      <th>X4</th>\n","      <th>X5</th>\n","      <th>X6</th>\n","      <th>X8</th>\n","      <th>...</th>\n","      <th>X375</th>\n","      <th>X376</th>\n","      <th>X377</th>\n","      <th>X378</th>\n","      <th>X379</th>\n","      <th>X380</th>\n","      <th>X382</th>\n","      <th>X383</th>\n","      <th>X384</th>\n","      <th>X385</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","<p>0 rows × 378 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a4a49e6-3c70-40e9-9e5e-882479457320')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8a4a49e6-3c70-40e9-9e5e-882479457320 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8a4a49e6-3c70-40e9-9e5e-882479457320');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["train.loc[:, (train == 0).all()] #한열이 모두 0인경우"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"I4jmYa5qi3QF","executionInfo":{"status":"ok","timestamp":1679072418672,"user_tz":-540,"elapsed":15,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"5e8f5aea-ea4a-4bfd-b633-0012bf15790b"},"id":"I4jmYa5qi3QF","execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      X11  X93  X107  X233  X235  X268  X289  X290  X293  X297  X330  X347\n","0       0    0     0     0     0     0     0     0     0     0     0     0\n","1       0    0     0     0     0     0     0     0     0     0     0     0\n","2       0    0     0     0     0     0     0     0     0     0     0     0\n","3       0    0     0     0     0     0     0     0     0     0     0     0\n","4       0    0     0     0     0     0     0     0     0     0     0     0\n","...   ...  ...   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...\n","4204    0    0     0     0     0     0     0     0     0     0     0     0\n","4205    0    0     0     0     0     0     0     0     0     0     0     0\n","4206    0    0     0     0     0     0     0     0     0     0     0     0\n","4207    0    0     0     0     0     0     0     0     0     0     0     0\n","4208    0    0     0     0     0     0     0     0     0     0     0     0\n","\n","[4209 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-ed5165e5-51c6-48f4-af83-603adae2efe4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X11</th>\n","      <th>X93</th>\n","      <th>X107</th>\n","      <th>X233</th>\n","      <th>X235</th>\n","      <th>X268</th>\n","      <th>X289</th>\n","      <th>X290</th>\n","      <th>X293</th>\n","      <th>X297</th>\n","      <th>X330</th>\n","      <th>X347</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4204</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4205</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4206</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4207</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4208</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4209 rows × 12 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed5165e5-51c6-48f4-af83-603adae2efe4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ed5165e5-51c6-48f4-af83-603adae2efe4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ed5165e5-51c6-48f4-af83-603adae2efe4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["sns.histplot(data=train.y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":298},"id":"KtUixlhDjv2A","executionInfo":{"status":"ok","timestamp":1679072419181,"user_tz":-540,"elapsed":523,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"b0d7d5bf-d61f-4a40-c161-593aa64c7fb5"},"id":"KtUixlhDjv2A","execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='y', ylabel='Count'>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYUAAAEGCAYAAACKB4k+AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAVU0lEQVR4nO3dfYxd913n8fe3mSYtqRMn8TCx/JAJrQOu1qKJTAi0oKXhoQlQB2hDUUVNCWtFpKtG5SndIhbQrtLuQwtdRYlME+pAaBpKq9hQoGkailYiSZ0H8nTTiZs2sV17PDhP3jzATvzlj/ub0zvjmfEde849d3zfL+lqzvmdM3e+Ovfc85nz9DuRmUiSBPCapguQJPUPQ0GSVDEUJEkVQ0GSVDEUJEmVoaYLOB4rVqzI0dHRpsuQpCXlvvvu+5fMHJ5t2pIOhdHRUXbu3Nl0GZK0pETEU3NN8/CRJKlSayhExLci4uGIeDAidpa2MyPijoh4ovw8o7RHRHwyInZFxEMRcUGdtUmSjtSLPYUfy8y3ZObGMn4NcGdmrgPuLOMAlwDrymsLcH0PapMkdWji8NEmYFsZ3gZc1tF+c7bdDSyPiJUN1CdJA6vuUEjgSxFxX0RsKW0jmbmvDO8HRsrwKmB3x+/uKW3TRMSWiNgZETsnJibqqluSBlLdVx+9LTP3RsR3A3dExOOdEzMzI2JBPfJl5lZgK8DGjRvtzU+SFlGtewqZubf8PAB8AbgQGJ86LFR+Hiiz7wXWdPz66tImSeqR2kIhIk6NiGVTw8BPAo8A24HNZbbNwO1leDvwvnIV0kXA8x2HmSRJPVDn4aMR4AsRMfV3/iIz/y4ivgbcFhFXAE8Bl5f5vwhcCuwCXgLeX2NttZucnKTVak1rW79+PUNDS/p+QUknuNq2UJn5JPD9s7QfBC6epT2Bq+qqp9darRZXXreDZSNrATg0/jQ3XAUbNmxouDJJmpv/ttZo2chalq96Y9NlSFLX7OZCklQxFCRJFUNBklQxFCRJFUNBklQxFCRJFUNBklQxFCRJFW9e65HDh19lbGysGrfLC0n9yK1Sj7w48W2u3fEKK8552S4vJPUtQ6GHTh1ebbcXkvqa5xQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSZXaQyEiToqIByLir8v4uRFxT0TsiojPRsTJpf2UMr6rTB+tuzZJ0nS92FP4INDqGP8Y8InMfBPwLHBFab8CeLa0f6LMJ0nqoVpDISJWAz8NfKqMB/B24HNllm3AZWV4UxmnTL+4zC9J6pG69xT+CPht4HAZPwt4LjMny/geYFUZXgXsBijTny/zTxMRWyJiZ0TsnJiYqLF0SRo8tYVCRPwMcCAz71vM983MrZm5MTM3Dg8PL+ZbS9LAG6rxvd8KvDMiLgVeB5wG/DGwPCKGyt7AamBvmX8vsAbYExFDwOnAwRrrkyTNUNueQmZ+ODNXZ+Yo8B7gK5n5XuAu4F1lts3A7WV4exmnTP9KZmZd9UmSjtTEfQq/A3woInbRPmdwY2m/ETirtH8IuKaB2iRpoNV5+KiSmf8A/EMZfhK4cJZ5XgHe3Yt6JEmz845mSVLFUJAkVQwFSVLFUJAkVQwFSVLFUJAkVQwFSVLFUJAkVQwFSVLFUJAkVQwFSVLFUJAkVQwFSVLFUJAkVQwFSVLFUJAkVQwFSVLFUJAkVQwFSVKlJ89oVu9NTk7SarWq8fXr1zM05MctaX5uJU5QrVaLK6/bwbKRtRwaf5obroINGzY0XZakPmconMCWjaxl+ao3Nl2GpCXEcwqSpIqhIEmqGAqSpIqhIEmqGAqSpIqhIEmqeElqAw4ffpWxsbFpbd5cJqkfuBVqwIsT3+baHa+w4pyXAby5TFLfMBQacurwam8sk9R3PKcgSaoYCpKkiqEgSarUFgoR8bqIuDci/jkiHo2IPyjt50bEPRGxKyI+GxEnl/ZTyviuMn20rtokSbOrc0/hX4G3Z+b3A28B3hERFwEfAz6RmW8CngWuKPNfATxb2j9R5pMk9VBtoZBt/6+Mvra8Eng78LnSvg24rAxvKuOU6RdHRNRVnyTpSLWeU4iIkyLiQeAAcAfwDeC5zJwss+wBVpXhVcBugDL9eeCsWd5zS0TsjIidExMTdZYvSQOn1lDIzFcz8y3AauBC4PsW4T23ZubGzNw4PDx8vG8nSerQk6uPMvM54C7gh4DlETF109xqYG8Z3gusASjTTwcO9qI+SVJbnVcfDUfE8jL8euAngBbtcHhXmW0zcHsZ3l7GKdO/kplZV32SpCPV2c3FSmBbRJxEO3xuy8y/jojHgFsj4r8BDwA3lvlvBP4sInYBzwDvqbE2SdIsaguFzHwIOH+W9idpn1+Y2f4K8O666pEkHV1Xh48i4q3dtEmSlrZu9xT+D3BBF21qyOTkJK1WqxofGxvDUzKSFmreUIiIHwJ+GBiOiA91TDoNOKnOwrQwrVaLK6/bwbKRtQDsf+xeTh/1+QySFuZoewonA28o8y3raH+B71xBpD6xbGRt9YyGQ+O7G65G0lI0byhk5leBr0bEpzPzqR7VJElqSLfnFE6JiK3AaOfvZObb6yhKktSMbkPhL4EbgE8Br9ZXjiSpSd2GwmRmXl9rJZKkxnXbzcWOiPj1iFgZEWdOvWqtTJLUc93uKUz1SfRbHW0JfM/iliNJalJXoZCZ59ZdiCSpeV2FQkS8b7b2zLx5cctRHQ4ffpWxsbFpbevXr2doqM7+ECUtRd1uFX6gY/h1wMXA/YChULOZ3Vccy8b8xYlvc+2OV1hxzssAHBp/mhuugg0bvONZ0nTdHj76z53j5TkJt9ZRkKbr7L7ieDbmpw6vru52lqS5HOvxgxcBzzPUYLaO7d7w3WvcoEvqiW7PKeygfbURtDvCWw/cVldRg8yO7SQ1qds9hf/VMTwJPJWZe2qoR9ixnaTmdHXzWukY73HaPaWeAfxbnUVJkprR7ZPXLgfupf24zMuBeyLCrrMl6QTT7eGjjwA/kJkHACJiGPgy8Lm6CpMk9V63fR+9ZioQioML+F1J0hLR7Z7C30XE3wOfKeO/CHyxnpIkSU052jOa3wSMZOZvRcTPA28rk/4JuKXu4iRJvXW0PYU/Aj4MkJmfBz4PEBEbyrSfrbE2SVKPHe28wEhmPjyzsbSN1lKRJKkxRwuF5fNMe/0i1iFJ6gNHC4WdEfGfZjZGxK8B99VTkiSpKUc7p3A18IWIeC/fCYGNwMnAz9VYlySpAfOGQmaOAz8cET8G/IfS/DeZ+ZXaK5Mk9Vy3z1O4C7ir5lokSQ3zrmRJUsVQkCRVDAVJUqW2UIiINRFxV0Q8FhGPRsQHS/uZEXFHRDxRfp5R2iMiPhkRuyLioYi4oK7aJEmzq3NPYRL4jcx8M3ARcFVEvBm4BrgzM9cBd5ZxgEuAdeW1Bbi+xtokSbOoLRQyc19m3l+GDwEtYBWwCdhWZtsGXFaGNwE3Z9vdwPKIWFlXfZKkI/XknEJEjALnA/fQ7k9pX5m0Hxgpw6uAzgcS7yltM99rS0TsjIidExMT9RUtSQOo2+cpHLOIeAPwV8DVmflCRFTTMjMjIhfyfpm5FdgKsHHjxgX97olmcnKSVqsFwNjYGJkDvTgkLYJaQyEiXks7EG4pXW8DjEfEyszcVw4PTT3RbS+wpuPXV5e2E97hw68yNjYGLGzj3mq1uPK6HSwbWcv+x+7l9NENdZYpaQDUFgrR3iW4EWhl5sc7Jm0HNgMfLT9v72j/QETcCvwg8HzHYaYT2osT3+baHa+w4pyXF7xxXzayluWr3sih8d1Hn1mSjqLOPYW3Ar8MPBwRD5a2/0I7DG6LiCuAp4DLy7QvApcCu4CXgPfXWFvfOXV4tRt3SY2rLRQy8/8CMcfki2eZP4Gr6qpHknR03tEsSarUfvXRIPFqIElLnaGwiLwaSNJS5+GjRTZ1NdCpZ3kztqSlx1CQJFU8fDSAOm+Wm7J+/XqGhlwdpEHnVmAAdd4sB3Bo/GluuAo2bPAciDToDIUBNXWznCR18pyCJKliKEiSKh4+WkJmniD2BjlJi81QWEJmniD2BjlJi81QWGI6TxDbo6qkxeY5BUlSxVCQJFUMBUlSxVCQJFUMBUlSxVCQJFUMBUlSxVCQJFUMBUlSxVCQJFUMBUlSxVCQJFXsEE9HdMnt85qlweU3X9O65PZ5zdJgMxQE+MxmSW2eU5AkVQwFSVLFUJAkVQwFSVLFUJAkVWoLhYi4KSIORMQjHW1nRsQdEfFE+XlGaY+I+GRE7IqIhyLigrrqkiTNrc49hU8D75jRdg1wZ2auA+4s4wCXAOvKawtwfY11SZLmUFsoZOY/As/MaN4EbCvD24DLOtpvzra7geURsbKu2iRJs+v1OYWRzNxXhvcDI2V4FbC7Y749pe0IEbElInZGxM6JiYn6KpWkAdTYiebMTCCP4fe2ZubGzNw4PDxcQ2WSNLh6HQrjU4eFys8DpX0vsKZjvtWlTZLUQ70Ohe3A5jK8Gbi9o/195Sqki4DnOw4zSZJ6pLYO8SLiM8B/BFZExB7gvwIfBW6LiCuAp4DLy+xfBC4FdgEvAe+vqy5J0txqC4XM/KU5Jl08y7wJXFVXLZKk7th1tqaZ+cAd8KE70iDxm65pOh+4A/jQHWnAGAo6gg/ckQaXHeJJkiqGgiSpYihIkiqGgiSpYihIkiqGgiSpYihIkiqGgiSp4s1rmtfMbi/s8kI6sfnt1rw6u72wywvpxGcoAJOTk7RarWrc/4ans9sLaXC45QNarRZXXreDZSNr/W9Y0kAzFIplI2v9b1jSwDMUZvB5ApIGmVu6GXyegKRBZijMwhOrs3MvSjrx+W1W19yLkk58hsJxmHkp69jYGJnZYEX1cy9KOrEZCseh81JWgP2P3cvpo/7XLGnpMhSOU+elrIfGdzdcjSQdn4EMhUE87CNJ3RjIUPCwjyTNbiBDATzsI0mzGdhQ6JZdR8+tc9lMTk4CVMtm5rjLTVoa/JYehV1Hz61z2ex/7F6GTj2DFeesA5g27nKTlg5DoQtemz+3qWVzaHw3Q8tWTDsk1zkuaWnwcZySpIp7CqqdfSZJS4ffygWYuXHz/obuzOwz6YV93+Q3fmqM884774gT0mBgSE3ym7cAMzdu3t/Qvc7zMofGd3PtjodmPUFtYEjN8tu1QDM3bjo2852gniswvIpJql9fhUJEvAP4Y+Ak4FOZ+dGGS1ID5gqM+czsumS++yRmzuveh/QdffNNiIiTgOuAnwD2AF+LiO2Z+VizlalfzDyn07nhHxsb4+NfepxlZ58DTL9PovOQFDBt3pnTOt9zvsNX84WQh7202Gaub1DfOtVPa+mFwK7MfBIgIm4FNgG1hMKh8aer4RcP7mPolVd47rteP214IdMW6316Pa3pv7+QaQcev4/ffeAllp/9CAAHv/koJ73+NJafvYaD33yU09asZ9ksn/VLz07wu3/6t9N+b2re2aZ1vufUMMBLz+zn997745x33nmMjY3xh7d8me868+wF/Z50LGauby89s58//4Nfr+VQavTL1TMR8S7gHZn5a2X8l4EfzMwPzJhvC7CljH4v8PVFLGMF8C+L+H6LqZ9rg/6uz9qOXT/X18+1QX/Xd05mDs82oZ/2FLqSmVuBrXW8d0TszMyNdbz38ern2qC/67O2Y9fP9fVzbdD/9c2ln+5o3gus6RhfXdokST3ST6HwNWBdRJwbEScD7wG2N1yTJA2Uvjl8lJmTEfEB4O9pX5J6U2Y+2uMyajkstUj6uTbo7/qs7dj1c339XBv0f32z6psTzZKk5vXT4SNJUsMMBUlSZSBDISK+NyIe7Hi9EBFXR8TvR8TejvZLe1jTTRFxICIe6Wg7MyLuiIgnys8zSntExCcjYldEPBQRFzRQ2/+MiMfL3/9CRCwv7aMR8XLHMryhztrmqW/OzzIiPlyW3dcj4qcaqO2zHXV9KyIeLO09XXYRsSYi7oqIxyLi0Yj4YGlvfL2bp7a+WO/mqa8v1rvjkpkD/aJ9Uns/cA7w+8BvNlTHjwIXAI90tP0P4JoyfA3wsTJ8KfC3QAAXAfc0UNtPAkNl+GMdtY12ztfgspv1swTeDPwzcApwLvAN4KRe1jZj+v8Gfq+JZQesBC4ow8uAsbJ8Gl/v5qmtL9a7eerri/XueF4Duacww8XANzLzqSaLyMx/BJ6Z0bwJ2FaGtwGXdbTfnG13A8sjYmUva8vML2XmZBm9m/Z9JY2YY9nNZRNwa2b+a2Z+E9hFu4uVntcWEQFcDnymrr8/n8zcl5n3l+FDQAtYRR+sd3PV1i/r3TzLbi49Xe+Oh6HQvh+i80v5gbJretPUbnODRjJzXxneD4yU4VVAZ7/de5h/hazbr9L+D3LKuRHxQER8NSJ+pKmimP2z7Kdl9yPAeGY+0dHWyLKLiFHgfOAe+my9m1Fbp75Y72apr9/Xu3kNdChE+ya5dwJ/WZquB94IvAXYR3vXvi9kex+0764fjoiPAJPALaVpH7A2M88HPgT8RUSc1kBpfftZdvglpv9D0siyi4g3AH8FXJ2ZL3ROa3q9m6u2flnvZqlvKax38xroUAAuAe7PzHGAzBzPzFcz8zDwJzS/ezc+tXtefh4o7X3RJUhE/ArwM8B7y8aDsnt8sAzfR/vYac+7B53ns+yXZTcE/Dzw2am2JpZdRLyW9kbtlsz8fGnui/Vujtr6Zr2brb5+X++6MeihMO0/tRnHR38OeOSI3+it7cDmMrwZuL2j/X3lapCLgOc7dvd7ItoPRPpt4J2Z+VJH+3C0n41BRHwPsA54spe1lb8912e5HXhPRJwSEeeW+u7tdX3AjwOPZ+aeqYZeL7tyTuNGoJWZH++Y1Ph6N1dt/bLezVNfv693R9f0me6mXsCpwEHg9I62PwMeBh6i/SGu7GE9n6G9u/n/aR9vvAI4C7gTeAL4MnBmmTdoP5DoG6XejQ3Utov2MdIHy+uGMu8vAI+WtvuBn21o2c35WQIfKcvu68Alva6ttH8auHLGvD1ddsDbaB8aeqjjc7y0H9a7eWrri/Vunvr6Yr07npfdXEiSKoN++EiS1MFQkCRVDAVJUsVQkCRVDAVJUsVQkCRVDAVJUsVQkBZRRPxhRFzdMf7fp/ral5YCb16TFlHpMfPzmXlBRLyG9l3BF2bpl0fqd0NNFyCdSDLzWxFxMCLOp93l9AMGgpYSQ0FafJ8CfgU4G7ip2VKkhfHwkbTIynM6HgZeC6zLzFcbLknqmnsK0iLLzH+LiLuA5wwELTWGgrTIygnmi4B3N12LtFBekiotooh4M+0+/+/M6c9elpYEzylIkiruKUiSKoaCJKliKEiSKoaCJKliKEiSKv8Oqr599XznI6QAAAAASUVORK5CYII=\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.boxplot(data=train.y) #250이상 제거"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":284},"id":"3xN9xJSHj8-t","executionInfo":{"status":"ok","timestamp":1679072419182,"user_tz":-540,"elapsed":8,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"125c03cc-8cb0-4869-f67a-a76cdd717cc9"},"id":"3xN9xJSHj8-t","execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["corr_matrix = train.corr()\n","high_corr_var=np.where(corr_matrix>0.8)\n","high_corr_var"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IQwCz3YOhBm1","executionInfo":{"status":"ok","timestamp":1679072534070,"user_tz":-540,"elapsed":4899,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"97af58d9-77cd-4e98-ca89-878749cd19c1"},"id":"IQwCz3YOhBm1","execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([  0,   1,   2,   4,   5,   6,   6,   6,   7,   8,   9,   9,   9,\n","         10,  11,  11,  12,  13,  14,  15,  16,  17,  18,  19,  19,  20,\n","         20,  20,  20,  20,  20,  20,  20,  20,  20,  21,  22,  22,  22,\n","         23,  24,  24,  25,  26,  26,  26,  27,  28,  28,  28,  29,  30,\n","         30,  31,  32,  33,  34,  35,  35,  35,  36,  36,  36,  36,  37,\n","         38,  38,  39,  39,  39,  39,  39,  39,  39,  39,  40,  40,  41,\n","         42,  43,  44,  44,  44,  44,  44,  44,  45,  45,  45,  45,  45,\n","         45,  45,  45,  45,  45,  46,  47,  48,  49,  49,  49,  50,  51,\n","         51,  51,  51,  52,  52,  53,  53,  53,  54,  54,  55,  56,  57,\n","         57,  57,  57,  57,  57,  57,  58,  58,  59,  60,  61,  62,  62,\n","         62,  62,  63,  64,  65,  66,  66,  66,  66,  66,  66,  66,  66,\n","         66,  66,  67,  68,  69,  70,  70,  70,  70,  70,  70,  71,  72,\n","         73,  74,  74,  74,  74,  75,  75,  75,  76,  77,  77,  77,  77,\n","         78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  79,  79,  79,\n","         80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  81,  82,  84,\n","         84,  84,  84,  84,  84,  84,  84,  84,  84,  85,  86,  86,  86,\n","         87,  88,  88,  88,  88,  89,  89,  89,  89,  89,  89,  89,  89,\n","         89,  89,  90,  91,  91,  91,  91,  91,  92,  92,  92,  92,  92,\n","         92,  93,  94,  95,  96,  98,  98,  99, 100, 101, 102, 102, 102,\n","        103, 103, 103, 103, 103, 103, 103, 103, 104, 105, 106, 107, 108,\n","        108, 108, 109, 109, 109, 110, 110, 111, 111, 111, 111, 111, 111,\n","        111, 111, 111, 111, 112, 113, 114, 114, 115, 115, 115, 116, 117,\n","        117, 117, 118, 118, 119, 119, 120, 121, 122, 123, 123, 123, 123,\n","        123, 123, 123, 123, 124, 125, 125, 126, 126, 126, 127, 127, 127,\n","        128, 129, 129, 129, 130, 131, 132, 133, 134, 135, 135, 135, 136,\n","        136, 136, 136, 136, 136, 136, 136, 137, 137, 138, 138, 138, 139,\n","        140, 140, 140, 141, 142, 142, 142, 143, 143, 143, 144, 145, 146,\n","        147, 148, 149, 149, 149, 149, 150, 150, 150, 150, 150, 150, 150,\n","        150, 150, 150, 151, 152, 153, 154, 154, 154, 154, 154, 154, 154,\n","        154, 154, 154, 155, 155, 156, 157, 158, 158, 158, 158, 158, 158,\n","        158, 159, 160, 160, 160, 161, 162, 163, 164, 165, 166, 166, 167,\n","        167, 167, 167, 168, 169, 170, 171, 171, 171, 172, 172, 172, 173,\n","        173, 174, 174, 175, 175, 175, 175, 176, 176, 176, 177, 178, 178,\n","        178, 179, 180, 180, 180, 180, 180, 181, 182, 183, 183, 184, 184,\n","        184, 184, 184, 184, 184, 184, 185, 185, 185, 186, 187, 188, 188,\n","        188, 188, 188, 189, 190, 191, 192, 193, 194, 194, 195, 196, 197,\n","        198, 199, 199, 200, 200, 200, 200, 200, 200, 201, 201, 202, 202,\n","        202, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 204, 205,\n","        205, 205, 206, 207, 208, 208, 208, 208, 208, 208, 208, 208, 209,\n","        210, 210, 211, 212, 212, 212, 213, 213, 214, 215, 216, 216, 217,\n","        218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 220, 222, 223,\n","        224, 224, 224, 225, 225, 225, 225, 225, 225, 226, 226, 226, 227,\n","        227, 227, 227, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228,\n","        229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 230, 230, 230,\n","        230, 231, 231, 231, 232, 232, 232, 232, 233, 233, 233, 233, 233,\n","        234, 234, 234, 234, 235, 235, 235, 235, 235, 235, 235, 235, 235,\n","        235, 236, 236, 237, 237, 237, 237, 238, 239, 239, 239, 239, 240,\n","        240, 241, 242, 243, 244, 245, 246, 247, 247, 248, 248, 248, 249,\n","        249, 250, 250, 250, 251, 251, 251, 252, 252, 252, 253, 253, 255,\n","        256, 257, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 259,\n","        260, 261, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 263,\n","        263, 264, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 266,\n","        267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 280, 281, 281,\n","        282, 282, 284, 284, 285, 285, 286, 287, 288, 288, 288, 289, 289,\n","        289, 289, 290, 291, 292, 293, 293, 293, 293, 293, 293, 294, 295,\n","        296, 296, 296, 297, 298, 299, 299, 300, 301, 302, 302, 302, 303,\n","        304, 305, 305, 305, 305, 305, 305, 305, 305, 305, 305, 306, 306,\n","        306, 307, 308, 309, 309, 309, 310, 310, 310, 311, 311, 311, 312,\n","        313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 314, 316, 316,\n","        316, 316, 316, 317, 318, 318, 319, 320, 321, 322, 323, 324, 325,\n","        326, 327, 328, 328, 329, 330, 331, 331, 331, 331, 331, 331, 333,\n","        333, 333, 333, 333, 333, 334, 334, 334, 334, 334, 335, 336, 337,\n","        337, 337, 337, 337, 338, 339, 340, 341, 341, 341, 342, 342, 343,\n","        343, 343, 344, 345, 345, 345, 346, 347, 347, 348, 348, 348, 349,\n","        349, 349, 350, 350, 350, 351, 352, 352, 352, 352, 352, 353, 353,\n","        354, 355, 355, 355, 355, 355, 355, 356, 356, 357, 358, 358, 359,\n","        359, 359, 360, 361, 361, 362, 363, 363, 364, 364, 365, 366, 366,\n","        366, 367, 368, 369, 369, 369, 369]),\n"," array([  0,   1,   2,   4,   5,   6, 178, 237,   7,   8,   9, 310, 366,\n","         10,  11, 201,  12,  13,  14,  15,  16,  17,  18,  19, 137,  20,\n","         45,  66, 150, 154, 218, 258, 262, 265, 313,  21,  22,  26,  28,\n","         23,  24,  30,  25,  22,  26,  28,  27,  22,  26,  28,  29,  24,\n","         30,  31,  32,  33,  34,  35, 288, 302,  36, 149, 188, 233,  37,\n","         38, 253,  39,  57, 103, 123, 136, 158, 184, 208,  40, 118,  41,\n","         42,  43,  44,  92, 200, 225, 293, 355,  20,  45,  66, 150, 154,\n","        218, 258, 262, 265, 313,  46,  47,  48,  49, 126, 309,  50,  51,\n","        234, 239, 369,  52, 110,  53, 160, 202,  54, 364,  55,  56,  39,\n","         57, 103, 123, 136, 184, 208,  58, 199,  59,  60,  61,  62,  74,\n","        227, 230,  63,  64,  65,  20,  45,  66, 150, 154, 218, 258, 262,\n","        265, 313,  67,  68,  69,  70,  88,  91, 117, 289, 333,  71,  72,\n","         73,  62,  74, 227, 230,  75, 175, 180,  76,  77,  79, 231, 342,\n","         78,  80,  84,  89, 111, 203, 228, 229, 235, 305,  77,  79, 231,\n","         78,  80,  84,  89, 111, 203, 228, 229, 235, 305,  81,  82,  78,\n","         80,  84,  89, 111, 203, 228, 229, 235, 305,  85,  86, 138, 348,\n","         87,  70,  88,  91, 333,  78,  80,  84,  89, 111, 203, 228, 229,\n","        235, 305,  90,  70,  88,  91, 289, 333,  44,  92, 200, 225, 293,\n","        355,  93,  94,  95,  96,  98, 356,  99, 100, 101, 102, 171, 185,\n","         39,  57, 103, 123, 136, 158, 184, 208, 104, 105, 106, 107, 108,\n","        109, 296, 108, 109, 296,  52, 110,  78,  80,  84,  89, 111, 203,\n","        228, 229, 235, 305, 112, 113, 114, 213, 115, 167, 250, 116,  70,\n","        117, 333,  40, 118, 119, 167, 120, 121, 122,  39,  57, 103, 123,\n","        136, 158, 184, 208, 124, 125, 249,  49, 126, 309, 127, 129, 135,\n","        128, 127, 129, 135, 130, 131, 132, 133, 134, 127, 129, 135,  39,\n","         57, 103, 123, 136, 158, 184, 208,  19, 137,  86, 138, 348, 139,\n","        140, 212, 311, 141, 142, 306, 359, 143, 205, 345, 144, 145, 146,\n","        147, 148,  36, 149, 188, 233,  20,  45,  66, 150, 154, 218, 258,\n","        262, 265, 313, 151, 152, 153,  20,  45,  66, 150, 154, 218, 258,\n","        262, 265, 313, 155, 263, 156, 157,  39, 103, 123, 136, 158, 184,\n","        208, 159,  53, 160, 202, 161, 162, 163, 164, 165, 166, 236, 115,\n","        119, 167, 250, 168, 169, 170, 102, 171, 185, 172, 248, 252, 173,\n","        363, 174, 347,  75, 175, 180, 232, 176, 224, 251, 177,   6, 178,\n","        237, 179,  75, 175, 180, 232, 343, 181, 182, 183, 331,  39,  57,\n","        103, 123, 136, 158, 184, 208, 102, 171, 185, 186, 187,  36, 149,\n","        188, 233, 341, 189, 190, 191, 192, 193, 194, 353, 195, 196, 197,\n","        198,  58, 199,  44,  92, 200, 225, 293, 355,  11, 201,  53, 160,\n","        202,  78,  80,  84,  89, 111, 203, 228, 229, 235, 305, 204, 143,\n","        205, 345, 206, 207,  39,  57, 103, 123, 136, 158, 184, 208, 209,\n","        210, 237, 211, 140, 212, 311, 114, 213, 214, 215, 216, 240, 217,\n","         20,  45,  66, 150, 154, 218, 258, 262, 265, 313, 220, 222, 223,\n","        176, 224, 251,  44,  92, 200, 225, 293, 355, 226, 349, 350,  62,\n","         74, 227, 230,  78,  80,  84,  89, 111, 203, 228, 229, 235, 305,\n","         78,  80,  84,  89, 111, 203, 228, 229, 235, 305,  62,  74, 227,\n","        230,  77,  79, 231, 175, 180, 232, 343,  36, 149, 188, 233, 341,\n","         51, 234, 239, 369,  78,  80,  84,  89, 111, 203, 228, 229, 235,\n","        305, 166, 236,   6, 178, 210, 237, 238,  51, 234, 239, 369, 216,\n","        240, 241, 242, 243, 244, 245, 246, 247, 299, 172, 248, 252, 125,\n","        249, 115, 167, 250, 176, 224, 251, 172, 248, 252,  38, 253, 255,\n","        256, 257,  20,  45,  66, 150, 154, 218, 258, 262, 265, 313, 259,\n","        260, 261,  20,  45,  66, 150, 154, 218, 258, 262, 265, 313, 155,\n","        263, 264,  20,  45,  66, 150, 154, 218, 258, 262, 265, 313, 266,\n","        267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 280, 281, 282,\n","        281, 282, 284, 285, 284, 285, 286, 287,  35, 288, 302,  70,  91,\n","        289, 333, 290, 291, 292,  44,  92, 200, 225, 293, 355, 294, 295,\n","        108, 109, 296, 297, 298, 247, 299, 300, 301,  35, 288, 302, 303,\n","        304,  78,  80,  84,  89, 111, 203, 228, 229, 235, 305, 142, 306,\n","        359, 307, 308,  49, 126, 309,   9, 310, 366, 140, 212, 311, 312,\n","         20,  45,  66, 150, 154, 218, 258, 262, 265, 313, 314, 316, 331,\n","        334, 337, 352, 317, 318, 358, 319, 320, 321, 322, 323, 324, 325,\n","        326, 327, 328, 361, 329, 330, 183, 316, 331, 334, 337, 352,  70,\n","         88,  91, 117, 289, 333, 316, 331, 334, 337, 352, 335, 336, 316,\n","        331, 334, 337, 352, 338, 339, 340, 188, 233, 341,  77, 342, 180,\n","        232, 343, 344, 143, 205, 345, 346, 174, 347,  86, 138, 348, 226,\n","        349, 350, 226, 349, 350, 351, 316, 331, 334, 337, 352, 194, 353,\n","        354,  44,  92, 200, 225, 293, 355,  98, 356, 357, 318, 358, 142,\n","        306, 359, 360, 328, 361, 362, 173, 363,  54, 364, 365,   9, 310,\n","        366, 367, 368,  51, 234, 239, 369]))"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["#상관계수 0.7이상 열들\n","corr_matrix = train.corr()\n","high_corr_var=np.where(corr_matrix>0.8)\n","high_corr_var=[(corr_matrix.columns[x],corr_matrix.columns[y]) for x,y in zip(*high_corr_var) if x!=y]\n","high_corr_var"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kso_nHC5pnuH","executionInfo":{"status":"ok","timestamp":1679072431287,"user_tz":-540,"elapsed":4055,"user":{"displayName":"이승재","userId":"05229376374116594418"}},"outputId":"9a84857c-e542-4c27-ca5a-00682c160c6c"},"id":"kso_nHC5pnuH","execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('X14', 'X191'),\n"," ('X14', 'X251'),\n"," ('X17', 'X325'),\n"," ('X17', 'X382'),\n"," ('X19', 'X215'),\n"," ('X28', 'X148'),\n"," ('X29', 'X54'),\n"," ('X29', 'X76'),\n"," ('X29', 'X162'),\n"," ('X29', 'X166'),\n"," ('X29', 'X232'),\n"," ('X29', 'X272'),\n"," ('X29', 'X276'),\n"," ('X29', 'X279'),\n"," ('X29', 'X328'),\n"," ('X31', 'X35'),\n"," ('X31', 'X37'),\n"," ('X33', 'X39'),\n"," ('X35', 'X31'),\n"," ('X35', 'X37'),\n"," ('X37', 'X31'),\n"," ('X37', 'X35'),\n"," ('X39', 'X33'),\n"," ('X44', 'X302'),\n"," ('X44', 'X317'),\n"," ('X45', 'X161'),\n"," ('X45', 'X202'),\n"," ('X45', 'X247'),\n"," ('X47', 'X267'),\n"," ('X48', 'X66'),\n"," ('X48', 'X113'),\n"," ('X48', 'X134'),\n"," ('X48', 'X147'),\n"," ('X48', 'X170'),\n"," ('X48', 'X198'),\n"," ('X48', 'X222'),\n"," ('X49', 'X129'),\n"," ('X53', 'X102'),\n"," ('X53', 'X214'),\n"," ('X53', 'X239'),\n"," ('X53', 'X308'),\n"," ('X53', 'X370'),\n"," ('X54', 'X29'),\n"," ('X54', 'X76'),\n"," ('X54', 'X162'),\n"," ('X54', 'X166'),\n"," ('X54', 'X232'),\n"," ('X54', 'X272'),\n"," ('X54', 'X276'),\n"," ('X54', 'X279'),\n"," ('X54', 'X328'),\n"," ('X58', 'X137'),\n"," ('X58', 'X324'),\n"," ('X60', 'X248'),\n"," ('X60', 'X253'),\n"," ('X60', 'X385'),\n"," ('X61', 'X120'),\n"," ('X62', 'X172'),\n"," ('X62', 'X216'),\n"," ('X63', 'X379'),\n"," ('X66', 'X48'),\n"," ('X66', 'X113'),\n"," ('X66', 'X134'),\n"," ('X66', 'X147'),\n"," ('X66', 'X198'),\n"," ('X66', 'X222'),\n"," ('X67', 'X213'),\n"," ('X71', 'X84'),\n"," ('X71', 'X241'),\n"," ('X71', 'X244'),\n"," ('X76', 'X29'),\n"," ('X76', 'X54'),\n"," ('X76', 'X162'),\n"," ('X76', 'X166'),\n"," ('X76', 'X232'),\n"," ('X76', 'X272'),\n"," ('X76', 'X276'),\n"," ('X76', 'X279'),\n"," ('X76', 'X328'),\n"," ('X80', 'X98'),\n"," ('X80', 'X101'),\n"," ('X80', 'X128'),\n"," ('X80', 'X304'),\n"," ('X80', 'X348'),\n"," ('X84', 'X71'),\n"," ('X84', 'X241'),\n"," ('X84', 'X244'),\n"," ('X85', 'X187'),\n"," ('X85', 'X194'),\n"," ('X87', 'X89'),\n"," ('X87', 'X245'),\n"," ('X87', 'X357'),\n"," ('X88', 'X90'),\n"," ('X88', 'X94'),\n"," ('X88', 'X99'),\n"," ('X88', 'X122'),\n"," ('X88', 'X217'),\n"," ('X88', 'X242'),\n"," ('X88', 'X243'),\n"," ('X88', 'X249'),\n"," ('X88', 'X320'),\n"," ('X89', 'X87'),\n"," ('X89', 'X245'),\n"," ('X90', 'X88'),\n"," ('X90', 'X94'),\n"," ('X90', 'X99'),\n"," ('X90', 'X122'),\n"," ('X90', 'X217'),\n"," ('X90', 'X242'),\n"," ('X90', 'X243'),\n"," ('X90', 'X249'),\n"," ('X90', 'X320'),\n"," ('X94', 'X88'),\n"," ('X94', 'X90'),\n"," ('X94', 'X99'),\n"," ('X94', 'X122'),\n"," ('X94', 'X217'),\n"," ('X94', 'X242'),\n"," ('X94', 'X243'),\n"," ('X94', 'X249'),\n"," ('X94', 'X320'),\n"," ('X96', 'X150'),\n"," ('X96', 'X363'),\n"," ('X98', 'X80'),\n"," ('X98', 'X101'),\n"," ('X98', 'X348'),\n"," ('X99', 'X88'),\n"," ('X99', 'X90'),\n"," ('X99', 'X94'),\n"," ('X99', 'X122'),\n"," ('X99', 'X217'),\n"," ('X99', 'X242'),\n"," ('X99', 'X243'),\n"," ('X99', 'X249'),\n"," ('X99', 'X320'),\n"," ('X101', 'X80'),\n"," ('X101', 'X98'),\n"," ('X101', 'X304'),\n"," ('X101', 'X348'),\n"," ('X102', 'X53'),\n"," ('X102', 'X214'),\n"," ('X102', 'X239'),\n"," ('X102', 'X308'),\n"," ('X102', 'X370'),\n"," ('X108', 'X371'),\n"," ('X112', 'X183'),\n"," ('X112', 'X199'),\n"," ('X113', 'X48'),\n"," ('X113', 'X66'),\n"," ('X113', 'X134'),\n"," ('X113', 'X147'),\n"," ('X113', 'X170'),\n"," ('X113', 'X198'),\n"," ('X113', 'X222'),\n"," ('X118', 'X119'),\n"," ('X118', 'X311'),\n"," ('X119', 'X118'),\n"," ('X119', 'X311'),\n"," ('X120', 'X61'),\n"," ('X122', 'X88'),\n"," ('X122', 'X90'),\n"," ('X122', 'X94'),\n"," ('X122', 'X99'),\n"," ('X122', 'X217'),\n"," ('X122', 'X242'),\n"," ('X122', 'X243'),\n"," ('X122', 'X249'),\n"," ('X122', 'X320'),\n"," ('X125', 'X227'),\n"," ('X126', 'X179'),\n"," ('X126', 'X264'),\n"," ('X128', 'X80'),\n"," ('X128', 'X348'),\n"," ('X129', 'X49'),\n"," ('X130', 'X179'),\n"," ('X134', 'X48'),\n"," ('X134', 'X66'),\n"," ('X134', 'X113'),\n"," ('X134', 'X147'),\n"," ('X134', 'X170'),\n"," ('X134', 'X198'),\n"," ('X134', 'X222'),\n"," ('X136', 'X263'),\n"," ('X137', 'X58'),\n"," ('X137', 'X324'),\n"," ('X138', 'X140'),\n"," ('X138', 'X146'),\n"," ('X140', 'X138'),\n"," ('X140', 'X146'),\n"," ('X146', 'X138'),\n"," ('X146', 'X140'),\n"," ('X147', 'X48'),\n"," ('X147', 'X66'),\n"," ('X147', 'X113'),\n"," ('X147', 'X134'),\n"," ('X147', 'X170'),\n"," ('X147', 'X198'),\n"," ('X147', 'X222'),\n"," ('X148', 'X28'),\n"," ('X150', 'X96'),\n"," ('X150', 'X363'),\n"," ('X152', 'X226'),\n"," ('X152', 'X326'),\n"," ('X154', 'X321'),\n"," ('X154', 'X374'),\n"," ('X155', 'X219'),\n"," ('X155', 'X360'),\n"," ('X161', 'X45'),\n"," ('X161', 'X202'),\n"," ('X161', 'X247'),\n"," ('X162', 'X29'),\n"," ('X162', 'X54'),\n"," ('X162', 'X76'),\n"," ('X162', 'X166'),\n"," ('X162', 'X232'),\n"," ('X162', 'X272'),\n"," ('X162', 'X276'),\n"," ('X162', 'X279'),\n"," ('X162', 'X328'),\n"," ('X166', 'X29'),\n"," ('X166', 'X54'),\n"," ('X166', 'X76'),\n"," ('X166', 'X162'),\n"," ('X166', 'X232'),\n"," ('X166', 'X272'),\n"," ('X166', 'X276'),\n"," ('X166', 'X279'),\n"," ('X166', 'X328'),\n"," ('X167', 'X277'),\n"," ('X170', 'X48'),\n"," ('X170', 'X113'),\n"," ('X170', 'X134'),\n"," ('X170', 'X147'),\n"," ('X170', 'X198'),\n"," ('X170', 'X222'),\n"," ('X172', 'X62'),\n"," ('X172', 'X216'),\n"," ('X178', 'X250'),\n"," ('X179', 'X126'),\n"," ('X179', 'X130'),\n"," ('X179', 'X264'),\n"," ('X183', 'X112'),\n"," ('X183', 'X199'),\n"," ('X184', 'X262'),\n"," ('X184', 'X266'),\n"," ('X185', 'X378'),\n"," ('X186', 'X362'),\n"," ('X187', 'X85'),\n"," ('X187', 'X194'),\n"," ('X187', 'X246'),\n"," ('X189', 'X238'),\n"," ('X189', 'X265'),\n"," ('X191', 'X14'),\n"," ('X191', 'X251'),\n"," ('X194', 'X85'),\n"," ('X194', 'X187'),\n"," ('X194', 'X246'),\n"," ('X194', 'X358'),\n"," ('X197', 'X346'),\n"," ('X198', 'X48'),\n"," ('X198', 'X66'),\n"," ('X198', 'X113'),\n"," ('X198', 'X134'),\n"," ('X198', 'X147'),\n"," ('X198', 'X170'),\n"," ('X198', 'X222'),\n"," ('X199', 'X112'),\n"," ('X199', 'X183'),\n"," ('X202', 'X45'),\n"," ('X202', 'X161'),\n"," ('X202', 'X247'),\n"," ('X202', 'X356'),\n"," ('X208', 'X368'),\n"," ('X213', 'X67'),\n"," ('X214', 'X53'),\n"," ('X214', 'X102'),\n"," ('X214', 'X239'),\n"," ('X214', 'X308'),\n"," ('X214', 'X370'),\n"," ('X215', 'X19'),\n"," ('X216', 'X62'),\n"," ('X216', 'X172'),\n"," ('X217', 'X88'),\n"," ('X217', 'X90'),\n"," ('X217', 'X94'),\n"," ('X217', 'X99'),\n"," ('X217', 'X122'),\n"," ('X217', 'X242'),\n"," ('X217', 'X243'),\n"," ('X217', 'X249'),\n"," ('X217', 'X320'),\n"," ('X219', 'X155'),\n"," ('X219', 'X360'),\n"," ('X222', 'X48'),\n"," ('X222', 'X66'),\n"," ('X222', 'X113'),\n"," ('X222', 'X134'),\n"," ('X222', 'X147'),\n"," ('X222', 'X170'),\n"," ('X222', 'X198'),\n"," ('X224', 'X251'),\n"," ('X226', 'X152'),\n"," ('X226', 'X326'),\n"," ('X227', 'X125'),\n"," ('X230', 'X254'),\n"," ('X232', 'X29'),\n"," ('X232', 'X54'),\n"," ('X232', 'X76'),\n"," ('X232', 'X162'),\n"," ('X232', 'X166'),\n"," ('X232', 'X272'),\n"," ('X232', 'X276'),\n"," ('X232', 'X279'),\n"," ('X232', 'X328'),\n"," ('X238', 'X189'),\n"," ('X238', 'X265'),\n"," ('X239', 'X53'),\n"," ('X239', 'X102'),\n"," ('X239', 'X214'),\n"," ('X239', 'X308'),\n"," ('X239', 'X370'),\n"," ('X240', 'X364'),\n"," ('X240', 'X365'),\n"," ('X241', 'X71'),\n"," ('X241', 'X84'),\n"," ('X241', 'X244'),\n"," ('X242', 'X88'),\n"," ('X242', 'X90'),\n"," ('X242', 'X94'),\n"," ('X242', 'X99'),\n"," ('X242', 'X122'),\n"," ('X242', 'X217'),\n"," ('X242', 'X243'),\n"," ('X242', 'X249'),\n"," ('X242', 'X320'),\n"," ('X243', 'X88'),\n"," ('X243', 'X90'),\n"," ('X243', 'X94'),\n"," ('X243', 'X99'),\n"," ('X243', 'X122'),\n"," ('X243', 'X217'),\n"," ('X243', 'X242'),\n"," ('X243', 'X249'),\n"," ('X243', 'X320'),\n"," ('X244', 'X71'),\n"," ('X244', 'X84'),\n"," ('X244', 'X241'),\n"," ('X245', 'X87'),\n"," ('X245', 'X89'),\n"," ('X246', 'X187'),\n"," ('X246', 'X194'),\n"," ('X246', 'X358'),\n"," ('X247', 'X45'),\n"," ('X247', 'X161'),\n"," ('X247', 'X202'),\n"," ('X247', 'X356'),\n"," ('X248', 'X60'),\n"," ('X248', 'X253'),\n"," ('X248', 'X385'),\n"," ('X249', 'X88'),\n"," ('X249', 'X90'),\n"," ('X249', 'X94'),\n"," ('X249', 'X99'),\n"," ('X249', 'X122'),\n"," ('X249', 'X217'),\n"," ('X249', 'X242'),\n"," ('X249', 'X243'),\n"," ('X249', 'X320'),\n"," ('X250', 'X178'),\n"," ('X251', 'X14'),\n"," ('X251', 'X191'),\n"," ('X251', 'X224'),\n"," ('X253', 'X60'),\n"," ('X253', 'X248'),\n"," ('X253', 'X385'),\n"," ('X254', 'X230'),\n"," ('X261', 'X314'),\n"," ('X262', 'X184'),\n"," ('X262', 'X266'),\n"," ('X263', 'X136'),\n"," ('X264', 'X126'),\n"," ('X264', 'X179'),\n"," ('X265', 'X189'),\n"," ('X265', 'X238'),\n"," ('X266', 'X184'),\n"," ('X266', 'X262'),\n"," ('X267', 'X47'),\n"," ('X272', 'X29'),\n"," ('X272', 'X54'),\n"," ('X272', 'X76'),\n"," ('X272', 'X162'),\n"," ('X272', 'X166'),\n"," ('X272', 'X232'),\n"," ('X272', 'X276'),\n"," ('X272', 'X279'),\n"," ('X272', 'X328'),\n"," ('X276', 'X29'),\n"," ('X276', 'X54'),\n"," ('X276', 'X76'),\n"," ('X276', 'X162'),\n"," ('X276', 'X166'),\n"," ('X276', 'X232'),\n"," ('X276', 'X272'),\n"," ('X276', 'X279'),\n"," ('X276', 'X328'),\n"," ('X277', 'X167'),\n"," ('X279', 'X29'),\n"," ('X279', 'X54'),\n"," ('X279', 'X76'),\n"," ('X279', 'X162'),\n"," ('X279', 'X166'),\n"," ('X279', 'X232'),\n"," ('X279', 'X272'),\n"," ('X279', 'X276'),\n"," ('X279', 'X328'),\n"," ('X295', 'X296'),\n"," ('X296', 'X295'),\n"," ('X298', 'X299'),\n"," ('X299', 'X298'),\n"," ('X302', 'X44'),\n"," ('X302', 'X317'),\n"," ('X304', 'X80'),\n"," ('X304', 'X101'),\n"," ('X304', 'X348'),\n"," ('X308', 'X53'),\n"," ('X308', 'X102'),\n"," ('X308', 'X214'),\n"," ('X308', 'X239'),\n"," ('X308', 'X370'),\n"," ('X311', 'X118'),\n"," ('X311', 'X119'),\n"," ('X314', 'X261'),\n"," ('X317', 'X44'),\n"," ('X317', 'X302'),\n"," ('X320', 'X88'),\n"," ('X320', 'X90'),\n"," ('X320', 'X94'),\n"," ('X320', 'X99'),\n"," ('X320', 'X122'),\n"," ('X320', 'X217'),\n"," ('X320', 'X242'),\n"," ('X320', 'X243'),\n"," ('X320', 'X249'),\n"," ('X321', 'X154'),\n"," ('X321', 'X374'),\n"," ('X324', 'X58'),\n"," ('X324', 'X137'),\n"," ('X325', 'X17'),\n"," ('X325', 'X382'),\n"," ('X326', 'X152'),\n"," ('X326', 'X226'),\n"," ('X328', 'X29'),\n"," ('X328', 'X54'),\n"," ('X328', 'X76'),\n"," ('X328', 'X162'),\n"," ('X328', 'X166'),\n"," ('X328', 'X232'),\n"," ('X328', 'X272'),\n"," ('X328', 'X276'),\n"," ('X328', 'X279'),\n"," ('X331', 'X346'),\n"," ('X331', 'X349'),\n"," ('X331', 'X352'),\n"," ('X331', 'X367'),\n"," ('X333', 'X373'),\n"," ('X343', 'X376'),\n"," ('X346', 'X197'),\n"," ('X346', 'X331'),\n"," ('X346', 'X349'),\n"," ('X346', 'X352'),\n"," ('X346', 'X367'),\n"," ('X348', 'X80'),\n"," ('X348', 'X98'),\n"," ('X348', 'X101'),\n"," ('X348', 'X128'),\n"," ('X348', 'X304'),\n"," ('X349', 'X331'),\n"," ('X349', 'X346'),\n"," ('X349', 'X352'),\n"," ('X349', 'X367'),\n"," ('X352', 'X331'),\n"," ('X352', 'X346'),\n"," ('X352', 'X349'),\n"," ('X352', 'X367'),\n"," ('X356', 'X202'),\n"," ('X356', 'X247'),\n"," ('X357', 'X87'),\n"," ('X358', 'X194'),\n"," ('X358', 'X246'),\n"," ('X360', 'X155'),\n"," ('X360', 'X219'),\n"," ('X362', 'X186'),\n"," ('X363', 'X96'),\n"," ('X363', 'X150'),\n"," ('X364', 'X240'),\n"," ('X364', 'X365'),\n"," ('X365', 'X240'),\n"," ('X365', 'X364'),\n"," ('X367', 'X331'),\n"," ('X367', 'X346'),\n"," ('X367', 'X349'),\n"," ('X367', 'X352'),\n"," ('X368', 'X208'),\n"," ('X370', 'X53'),\n"," ('X370', 'X102'),\n"," ('X370', 'X214'),\n"," ('X370', 'X239'),\n"," ('X370', 'X308'),\n"," ('X371', 'X108'),\n"," ('X373', 'X333'),\n"," ('X374', 'X154'),\n"," ('X374', 'X321'),\n"," ('X376', 'X343'),\n"," ('X378', 'X185'),\n"," ('X379', 'X63'),\n"," ('X382', 'X17'),\n"," ('X382', 'X325'),\n"," ('X385', 'X60'),\n"," ('X385', 'X248'),\n"," ('X385', 'X253')]"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","id":"f2c602bd","metadata":{"id":"f2c602bd"},"source":["이런 식으로 여러가지 그래프를 그려가며, 데이터에 대한 인사이트를 얻습니다!"]},{"cell_type":"markdown","id":"9dbb8802","metadata":{"id":"9dbb8802"},"source":["### 3. 전처리"]},{"cell_type":"markdown","id":"b79a6f0a","metadata":{"id":"b79a6f0a"},"source":["#### 결측치 처리"]},{"cell_type":"code","execution_count":null,"id":"bbafdcd0","metadata":{"id":"bbafdcd0","executionInfo":{"status":"aborted","timestamp":1679072381250,"user_tz":-540,"elapsed":13,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# 결측치가 있는 column\n","train = train[train.y < 250]"]},{"cell_type":"markdown","id":"0b757dc0","metadata":{"id":"0b757dc0"},"source":["#### 다중공선성 처리"]},{"cell_type":"code","source":["total = pd.concat([train, test])"],"metadata":{"id":"eG4BA4Qu0SYW","executionInfo":{"status":"aborted","timestamp":1679072381250,"user_tz":-540,"elapsed":13,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"id":"eG4BA4Qu0SYW","execution_count":null,"outputs":[]},{"cell_type":"code","source":["category = train.select_dtypes(include='object').columns #카테고리타입 열"],"metadata":{"id":"AYwvlBW-413D","executionInfo":{"status":"aborted","timestamp":1679072381251,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"id":"AYwvlBW-413D","execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_zero_columns = train.loc[:, (train == 0).all()].columns #train에서 한열이 모두 0인 열"],"metadata":{"id":"E4DE8nak7e_i","executionInfo":{"status":"aborted","timestamp":1679072381251,"user_tz":-540,"elapsed":13,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"id":"E4DE8nak7e_i","execution_count":null,"outputs":[]},{"cell_type":"code","source":["total_OHE = pd.get_dummies(data=total, columns=category)\n","temp = total_OHE.drop(columns=train_zero_columns)\n","temp = temp.drop(columns=['ID'])\n","split_point = len(train) #train, test경계\n","temp_train = temp[:split_point]\n","y = temp_train.y\n","X_train = temp_train.drop(columns=['y'])\n","temp_test = temp[split_point:]\n","X_test = temp_test.drop(columns=['y'])"],"metadata":{"id":"5XnSwb-XAOhC","executionInfo":{"status":"aborted","timestamp":1679072381251,"user_tz":-540,"elapsed":13,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"id":"5XnSwb-XAOhC","execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape, X_test.shape, y.shape)"],"metadata":{"id":"SDKxE4XrBkQR","executionInfo":{"status":"aborted","timestamp":1679072381251,"user_tz":-540,"elapsed":13,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"id":"SDKxE4XrBkQR","execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"id":"702d47e9","metadata":{"id":"702d47e9","executionInfo":{"status":"aborted","timestamp":1679072381251,"user_tz":-540,"elapsed":13,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# 상관계수 0.7이상인 변수 추출\n","def remove_correlated_columns(df, threshold=0.7):\n","    corr_matrix = df.corr()\n","    high_corr_var = np.where(np.abs(corr_matrix) > threshold)\n","    high_corr_var = [(corr_matrix.columns[x], corr_matrix.columns[y]) for x, y in zip(*high_corr_var) if x != y]\n","    for pair in high_corr_var:\n","        column1 = pair[0]\n","        column2 = pair[1]\n","        if column1 in df.columns:\n","            df = df.drop(column1, axis=1)\n","        elif column2 in df.columns:\n","            df = df.drop(column2, axis=1)\n","    return df\n","\n","temp = remove_correlated_columns(X_train, threshold=0.7)\n","corr_col = temp.columns\n","corr_col"]},{"cell_type":"code","source":["temp"],"metadata":{"id":"bp4vVB1j9q1m","executionInfo":{"status":"aborted","timestamp":1679072381252,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"id":"bp4vVB1j9q1m","execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Encoding Categorical Features"],"metadata":{"id":"JdO_MINum6pR"},"id":"JdO_MINum6pR"},{"cell_type":"markdown","id":"606493f0","metadata":{"id":"606493f0"},"source":["#### feature extraction\n","\n","- 차원의 저주를 해결하거나, 데이터의 feature 조합을 이용하는 새로운 feature를 생성할 때, PCA를 사용합니다.\n","\n","- 분석에 사용할 feature를 선택하는 과정도 포함합니다."]},{"cell_type":"code","source":["def find_feature_importance(X, model, show_plot):\n","\n","    feat_names = X.columns.values\n","    importances = model.feature_importances_\n","    std = np.std([tree.feature_importances_ for tree in model.estimators_], axis=0)\n","    indices = np.argsort(importances)[::-1][:20]\n","\n","    plt.figure(figsize=(12,12))\n","    plt.title(\"Feature importances\")\n","    plt.bar(range(len(indices)), importances[indices], color=\"r\", align=\"center\")\n","    plt.xticks(range(len(indices)), feat_names[indices], rotation='vertical')\n","    plt.xlim([-1, len(indices)])\n","    plt.show()\n","    \n","    important_features = X.columns[importances >= 0.005]\n","    return important_features\n","    \n","def apply_PCA(X, show_plot):\n","    from sklearn.decomposition import PCA\n","    # training data와 test data를 모두 PCA를 이용하여 차원 감소를 수행합니다.\n","    pca = PCA(n_components=0.90) # 원래 데이터의 90%를 보존하는 차원.\n","    pca_090 = pca.fit(X) # 학습 및 변환\n","    reduced_X = pca_090.transform(X)\n","    print(reduced_X.shape)\n","    \n","    if show_plot:\n","        labels = [f\"PC{x}\" for x in range(1, reduced_X.shape[1]+1)]\n","        pca_090_variance = np.round(pca_090.explained_variance_ratio_.cumsum()*100, decimals=1)\n","        plt.figure(figsize=(25,5))\n","        plt.bar(x=range(1, len(pca_090_variance)+1), height=pca_090_variance, tick_label=labels)\n","\n","        plt.xticks(rotation=90, color='indigo', size=15)\n","        plt.yticks(rotation=0, color='indigo', size=15)\n","        plt.title('Scree Plot',color='tab:orange', fontsize=25)\n","        plt.xlabel('Principal Components', {'color': 'tab:orange', 'fontsize':15})\n","        plt.ylabel('Cumulative percentage of explained variance ', {'color': 'tab:orange', 'fontsize':15})\n","        plt.show()\n","        \n","        X_train_pca_df = pd.DataFrame(reduced_X, columns=labels)\n","        display(X_train_pca_df)\n","\n","    return pca_090, X_train_pca_df"],"metadata":{"id":"_wwL0noScZke","executionInfo":{"status":"aborted","timestamp":1679072381252,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"id":"_wwL0noScZke","execution_count":null,"outputs":[]},{"cell_type":"code","source":["# PCA 적용\n","show_plot = True\n","pca_model, X = apply_PCA(temp, show_plot)\n","print(X.shape)"],"metadata":{"id":"-KcHFqFCccUX","executionInfo":{"status":"aborted","timestamp":1679072381252,"user_tz":-540,"elapsed":13,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"id":"-KcHFqFCccUX","execution_count":null,"outputs":[]},{"cell_type":"code","source":["pca_col = X.columns"],"metadata":{"id":"-uJLr7i05jWU","executionInfo":{"status":"aborted","timestamp":1679072381252,"user_tz":-540,"elapsed":13,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"id":"-uJLr7i05jWU","execution_count":null,"outputs":[]},{"cell_type":"markdown","id":"f497a2d8","metadata":{"id":"f497a2d8"},"source":["### 4. 학습 데이터 분할"]},{"cell_type":"code","execution_count":null,"id":"47306aaf","metadata":{"id":"47306aaf","executionInfo":{"status":"aborted","timestamp":1679072381252,"user_tz":-540,"elapsed":13,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# 첫번째 테스트용으로 사용하고, 실제 학습시에는 K-Fold CV를 사용합니다.\n","# train : test = 8 : 2\n","from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=0xC0FFEE)\n","print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)"]},{"cell_type":"markdown","id":"58056e51","metadata":{"id":"58056e51"},"source":["### 5. 학습 및 평가"]},{"cell_type":"code","execution_count":null,"id":"39fd2515","metadata":{"id":"39fd2515","executionInfo":{"status":"aborted","timestamp":1679072381253,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# # 간단하게 LightGBM 테스트\n","# # 적당한 hyper-parameter 조합을 두었습니다. (항상 best는 아닙니다. 예시입니다.)\n","\n","# param_grid = {\n","#     \"max_bin\" : 20,\n","#     \"learning_rate\" : 0.0025,\n","#     \"objective\" : \"regression\",\n","#     \"boosting_type\" : \"gbdt\",\n","#     \"metric\" : \"mae\",\n","#     \"sub_feature\" : 0.345,\n","#     \"bagging_fraction\" : 0.85,\n","#     \"bagging_freq\" : 40,\n","#     \"num_leaves\" : 512,\n","#     \"min_data\" : 500,\n","#     \"min_hessian\" : 0.05,\n","#     \"verbose\" : 2,\n","#     \"feature_fraction_seed\" : 2,\n","#     \"bagging_seed\" : 3\n","# }\n","\n","model = LGBMRegressor()"]},{"cell_type":"code","execution_count":null,"id":"ddffa474","metadata":{"scrolled":true,"id":"ddffa474","executionInfo":{"status":"aborted","timestamp":1679072381253,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["print(\"\\nFitting LightGBM...\")\n","model.fit(X_train, y_train)"]},{"cell_type":"code","execution_count":null,"id":"6c8b0259","metadata":{"id":"6c8b0259","executionInfo":{"status":"aborted","timestamp":1679072381253,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# metric은 그때마다 맞게 바꿔줘야 합니다.\n","from sklearn.metrics import r2_score\n","evaluation_metric = r2_score"]},{"cell_type":"code","execution_count":null,"id":"a6b39be5","metadata":{"id":"a6b39be5","executionInfo":{"status":"aborted","timestamp":1679072381253,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["print(\"Prediction\")\n","pred_train = model.predict(X_train)\n","pred_test = model.predict(X_test)\n","\n","\n","train_score = evaluation_metric(y_train, pred_train)\n","test_score = evaluation_metric(y_test, pred_test)\n","\n","print(\"Train Score : %.4f\" % train_score)\n","print(\"Test Score : %.4f\" % test_score)"]},{"cell_type":"markdown","id":"bc755b17","metadata":{"id":"bc755b17"},"source":["### 6. Hyper-parameter Tuning"]},{"cell_type":"markdown","id":"60070d0e","metadata":{"id":"60070d0e"},"source":["> GridSearchCV"]},{"cell_type":"markdown","id":"2bf886a9","metadata":{"id":"2bf886a9"},"source":["** LightGBM의 hyperparameter **\n","\n","[Official Documentation] https://lightgbm.readthedocs.io/en/latest/Parameters-Tuning.html \n","\n","[Blog 1] https://smecsm.tistory.com/133\n","\n","[Blog 2] https://towardsdatascience.com/kagglers-guide-to-lightgbm-hyperparameter-tuning-with-optuna-in-2021-ed048d9838b5\n","\n","[Blog 3] https://nurilee.com/2020/04/03/lightgbm-definition-parameter-tuning/"]},{"cell_type":"code","execution_count":null,"id":"815dcbef","metadata":{"scrolled":true,"id":"815dcbef","executionInfo":{"status":"aborted","timestamp":1679072381253,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# GridSearchCV를 이용하여 가장 좋은 성능을 가지는 모델을 찾아봅시다. (이것은 첫번째엔 선택입니다.)\n","# Lightgbm은 hyper-parameter의 영향을 많이 받기 때문에, 저는 보통 맨처음에 한번 정도는 가볍게 GCV를 해봅니다.\n","# 성능 향상이 별로 없다면, lightgbm으로 돌린 대략적인 성능이 이 정도라고 생각하면 됩니다.\n","# 만약 성능 향상이 크다면, 지금 데이터는 hyper-parameter tuning을 빡빡하게 하면 성능 향상이 많이 이끌어 낼 수 있습니다.\n","\n","from sklearn.model_selection import GridSearchCV\n","\n","param_grid = {\n","    'max_depth': [3, 5, 7],\n","    'n_estimators': [100, 200, 300],\n","    'learning_rate': [0.1, 0.05, 0.01],\n","    \"verbose\" : [-1], # 필수\n","}\n","\n","\n","gcv = GridSearchCV(estimator=model, param_grid=param_grid, cv=5,\n","                  n_jobs=-1, verbose=1)\n","\n","gcv.fit(X_train, y_train)\n","print(\"Best Estimator : \", gcv.best_estimator_)"]},{"cell_type":"code","execution_count":null,"id":"9ec6ac14","metadata":{"id":"9ec6ac14","executionInfo":{"status":"aborted","timestamp":1679072381253,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["print(\"Prediction with Best Estimator\")\n","gcv_pred_train = gcv.predict(X_train)\n","gcv_pred_test = gcv.predict(X_test)\n","\n","gcv_train_score = evaluation_metric(y_train, gcv_pred_train)\n","gcv_test_score = evaluation_metric(y_test, gcv_pred_test)\n","\n","print(\"Train MAE Score : %.4f\" % gcv_train_score)\n","print(\"Test MAE Score : %.4f\" % gcv_test_score)"]},{"cell_type":"code","execution_count":null,"id":"3b852da7","metadata":{"id":"3b852da7","executionInfo":{"status":"aborted","timestamp":1679072381254,"user_tz":-540,"elapsed":15,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["print(\"Performance Gain\") # 이걸로 성능 향상 확인.\n","print(\"in train : \", (train_score - gcv_train_score))\n","print(\"in test : \", (test_score - gcv_test_score))"]},{"cell_type":"markdown","id":"97e5302d","metadata":{"id":"97e5302d"},"source":["> optuna를 사용해봅시다 !"]},{"cell_type":"code","execution_count":null,"id":"34ce4986","metadata":{"id":"34ce4986","executionInfo":{"status":"aborted","timestamp":1679072381254,"user_tz":-540,"elapsed":15,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["def optimizer(trial, X, y, K):\n","    # 조절할 hyper-parameter 조합을 적어줍니다.\n","    n_estimators = \n","    max_depth = \n","    max_features = \n","    \n","    \n","    # 원하는 모델을 지정합니다, optuna는 시간이 오래걸리기 때문에 저는 보통 RF로 일단 테스트를 해본 뒤에 LGBM을 사용합니다.\n","    model = RandomForestRegressor(n_estimators=n_estimators,\n","                                 max_depth=max_depth,\n","                                 max_features=max_features)\n","    \n","    \n","    # K-Fold Cross validation을 구현합니다.\n","    folds = KFold(n_splits=K)\n","    losses = []\n","    \n","    for train_idx, val_idx in folds.split(X, y):\n","        X_train = X.iloc[train_idx, :]\n","        y_train = y.iloc[train_idx]\n","        \n","        X_val = X.iloc[val_idx, :]\n","        y_val = y.iloc[val_idx]\n","        \n","        model.fit(X_train, y_train)\n","        preds = model.predict(X_val)\n","        loss = mean_absolute_error(y_val, preds)\n","        losses.append(loss)\n","    \n","    \n","    # K-Fold의 평균 loss값을 돌려줍니다.\n","    return np.mean(losses)"]},{"cell_type":"code","execution_count":null,"id":"7150b210","metadata":{"scrolled":false,"id":"7150b210","executionInfo":{"status":"aborted","timestamp":1679072381254,"user_tz":-540,"elapsed":15,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["K = # Kfold 수\n","opt_func = partial(optimizer, X=X_train, y=y_train, K)\n","\n","study = optuna.create_study(direction=\"minimize\") # 최소/최대 어느 방향의 최적값을 구할 건지.\n","study.optimize(opt_func, n_trials=5)"]},{"cell_type":"code","execution_count":null,"id":"72d0a118","metadata":{"id":"72d0a118","executionInfo":{"status":"aborted","timestamp":1679072381254,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# optuna가 시도했던 모든 실험 관련 데이터\n","study.trials_dataframe()"]},{"cell_type":"code","execution_count":null,"id":"a805da05","metadata":{"id":"a805da05","executionInfo":{"status":"aborted","timestamp":1679072381254,"user_tz":-540,"elapsed":14,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["print(\"Best Score: %.4f\" % study.best_value) # best score 출력\n","print(\"Best params: \", study.best_trial.params) # best score일 때의 하이퍼파라미터들"]},{"cell_type":"code","execution_count":null,"id":"051ae1eb","metadata":{"id":"051ae1eb","executionInfo":{"status":"aborted","timestamp":1679072381255,"user_tz":-540,"elapsed":15,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# 실험 기록 시각화\n","optuna.visualization.plot_optimization_history(study)"]},{"cell_type":"code","execution_count":null,"id":"efbf8f65","metadata":{"scrolled":false,"id":"efbf8f65","executionInfo":{"status":"aborted","timestamp":1679072381255,"user_tz":-540,"elapsed":15,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["# hyper-parameter들의 중요도\n","optuna.visualization.plot_param_importances(study)"]},{"cell_type":"markdown","id":"24b360ec","metadata":{"id":"24b360ec"},"source":["### 7. 테스트 및 제출 파일 생성"]},{"cell_type":"code","execution_count":null,"id":"a0daf54e","metadata":{"id":"a0daf54e","executionInfo":{"status":"aborted","timestamp":1679072381255,"user_tz":-540,"elapsed":15,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["final_model = gcv.best_estimator_\n","final_model.fit(X_train, y_train)\n","preds = final_model.predict(X_test)\n","preds"]},{"cell_type":"code","source":["submission = pd.read_csv(base_path + \"sample_submission.csv\")\n","# PCA 적용\n","# test = X_test.drop(columns=corr_col, axis=1)\n","test = X_test[X_test.columns[X_test.columns.isin(corr_col)]]\n","test = pca_model.transform(test)\n","test\n","\n","prediction = final_model.predict(test)\n","submission[\"y\"] = prediction\n","display(submission)\n","submission.reset_index(drop=True).to_csv(f\"lgbm_submission_{feature_reducing}.csv\", index=False)"],"metadata":{"id":"xtP0fkdF0GvY","executionInfo":{"status":"aborted","timestamp":1679072381255,"user_tz":-540,"elapsed":15,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"id":"xtP0fkdF0GvY","execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"id":"dfa0db70","metadata":{"id":"dfa0db70","executionInfo":{"status":"aborted","timestamp":1679072381255,"user_tz":-540,"elapsed":15,"user":{"displayName":"이승재","userId":"05229376374116594418"}}},"outputs":[],"source":["X_test # 원본 데이터랑 id가 맞는지 확인 해보기!"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.12"},"colab":{"provenance":[{"file_id":"1FpGDQxkUXgivknbtsQDq_XAmBL6ZNCrV","timestamp":1674734826312}]}},"nbformat":4,"nbformat_minor":5}